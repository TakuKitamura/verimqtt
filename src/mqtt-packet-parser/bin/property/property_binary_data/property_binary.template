connect.connect_id.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.connect_id.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.connect_id.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
connect.flags.clean_start = 0 // type:uint8_t, max_u8:255
connect.flags.connect_flag = 0 // type:uint8_t, max_u8:255
connect.flags.password = 0 // type:uint8_t, max_u8:255
connect.flags.user_name = 0 // type:uint8_t, max_u8:255
connect.flags.will_flag = 0 // type:uint8_t, max_u8:255
connect.flags.will_qos = 0 // type:uint8_t, max_u8:255
connect.flags.will_retain = 0 // type:uint8_t, max_u8:255
connect.keep_alive = 0 // type:uint16_t, max_u16:65535
connect.password.binary_length = 0 // type:uint16_t, max_u16:65535
connect.password.binary_value = "hello" // type:uint8_t*, can use uint8_array
connect.password.is_valid_binary_data = false // type:bool
connect.protocol_name = "hello" // type:const char*, can use uint8_array
connect.protocol_version = 0 // type:uint8_t, max_u8:255
connect.user_name.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.user_name.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.user_name.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_payload.binary_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_payload.binary_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_payload.is_valid_binary_data = false // type:bool
connect.will.connect_will_property.property_id = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_id = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.binary_data_struct.binary_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_property.property_type_struct.binary_data_struct.binary_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_property.property_type_struct.binary_data_struct.is_valid_binary_data = false // type:bool
connect.will.connect_will_property.property_type_struct.four_byte_integer_struct = 0 // type:uint32_t, max_u32:4294967295
connect.will.connect_will_property.property_type_struct.one_byte_integer_struct = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.property_type_error.property_error_code = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.property_type_error.property_error_code_name = "hello" // type:const char*, can use uint8_array
connect.will.connect_will_property.property_type_struct.two_byte_integer_struct = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_property.property_type_struct.utf8_encoded_string_struct.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_property.property_type_struct.utf8_encoded_string_struct.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.utf8_encoded_string_struct.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
connect.will.connect_will_property.property_type_struct.variable_byte_integer_struct = 0 // type:uint32_t, max_u32:4294967295
connect.will.connect_will_topic_name.utf8_string_length = 0 // type:uint16_t, max_u16:65535
connect.will.connect_will_topic_name.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
connect.will.connect_will_topic_name.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
disconnect.disconnect_reason_code = 0 // type:uint8_t, max_u8:255
disconnect.disconnect_reason_code_name = "hello" // type:const char*, can use uint8_array
error.code = 0 // type:uint8_t, max_u8:255
error.message = "hello" // type:const char*, can use uint8_array
flags.dup_flag = 0 // type:uint8_t, max_u8:255
flags.flag = 0 // type:uint8_t, max_u8:255
flags.qos_flag = 0 // type:uint8_t, max_u8:255
flags.retain_flag = 0 // type:uint8_t, max_u8:255
message_name = "hello" // type:const char*, can use uint8_array
message_type = 0 // type:uint8_t, max_u8:255
property.property_id = 0 // type:uint8_t, max_u8:255
property.property_type_id = 0 // type:uint8_t, max_u8:255
property.property_type_struct.binary_data_struct.binary_length = 0 // type:uint16_t, max_u16:65535
property.property_type_struct.binary_data_struct.binary_value = "hello" // type:uint8_t*, can use uint8_array
property.property_type_struct.binary_data_struct.is_valid_binary_data = false // type:bool
property.property_type_struct.four_byte_integer_struct = 0 // type:uint32_t, max_u32:4294967295
property.property_type_struct.one_byte_integer_struct = 0 // type:uint8_t, max_u8:255
property.property_type_struct.property_type_error.property_error_code = 0 // type:uint8_t, max_u8:255
property.property_type_struct.property_type_error.property_error_code_name = "hello" // type:const char*, can use uint8_array
property.property_type_struct.two_byte_integer_struct = 0 // type:uint16_t, max_u16:65535
property.property_type_struct.utf8_encoded_string_struct.utf8_string_length = 0 // type:uint16_t, max_u16:65535
property.property_type_struct.utf8_encoded_string_struct.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
property.property_type_struct.utf8_encoded_string_struct.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_length = 0 // type:uint16_t, max_u16:65535
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_key.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_length = 0 // type:uint16_t, max_u16:65535
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_status_code = 0 // type:uint8_t, max_u8:255
property.property_type_struct.utf8_string_pair_struct.utf8_string_pair_value.utf8_string_value = "hello" // type:uint8_t*, can use uint8_array
property.property_type_struct.variable_byte_integer_struct = 0 // type:uint32_t, max_u32:4294967295
publish.packet_identifier = 0 // type:uint16_t, max_u16:65535
publish.payload.is_valid_payload = false // type:bool
publish.payload.payload_length = 0 // type:uint32_t, max_u32:4294967295
publish.payload.payload_value = "hello" // type:uint8_t*, can use uint8_array
publish.topic_length = 0 // type:uint32_t, max_u32:4294967295
publish.topic_name = "hello" // type:const char*, can use uint8_array
remaining_length = 0 // type:uint32_t, max_u32:4294967295
